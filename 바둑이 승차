def DFS(L, sum):
    global min, res

    if (c - sum) >= 0 and (c - sum) < min:
        min = (c - sum)
        res = sum

    if sum > c or L == n:
        return
    else:
        DFS(L+1, sum + a[L])
        DFS(L+1, sum)

if __name__ == "__main__":
    c, n = map(int, input().split())
    a = []
    for _ in range(n):
        a.append(int(input()))
    min = float('inf')
    res = 0
    DFS(0, 0)
    print(res)
    
# 80점 짜리 코드임
# 강사코드는 아이디어가 어렵고 실행이 안되는데? ;;


def DFS(L, sum, tsum):
    global res

    if sum + (total - tsum) < res:
        return
    if sum > c:
        return
    if L == n:
        if sum > res:
            res = sum
    else:
        DFS(L+1, sum + a[L], tsum+a[L])
        DFS(L+1, sum, tsum+a[L])

if __name__ == "__main__  ":
    c, n = map(int, input().split())
    a = []
    for _ in range(n):
        a.append(int(input()))
    res = 0
    total = sum(a)
    DFS(0, 0, 0)
    print(res)
