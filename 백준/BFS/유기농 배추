"""
아이디어
- 인접리스트가 아니라 인접행렬을 쓰는게 낫다고 생각함
- 인접리스트를 쓰면 어떻게 문제를 해결해야 할지 모르겠고 배추위치를 입력받는 걸 보면 인접행렬이 맞다고 생각
"""
from collections import deque

dx = [0, 0, -1, 1]
dy = [1, -1, 0, 0]

def bfs(x, y): # 전형적인 bfs 구현
    visited[x][y] = True
    q = deque([(x, y)])
    while q:
        px, py = q.popleft()
        for k in range(4):
            mx = px + dx[k]
            my = py + dy[k]
            if 0 <= mx < n and 0 <= my < m:
                if graph[mx][my] == 1 and not visited[mx][my]:
                    visited[mx][my] = True
                    q.append((mx, my))

T = int(input())
res = []

for _ in range(T):
    n, m, k = map(int, input().split())
    graph = [[0] * m for _ in range(n)] # 인접행렬 생성 (주의! 가로, 세로)
    visited = [[False] * m for _ in range(n)]
    cnt = 0

    for _ in range(k):
        a, b = map(int, input().split())
        graph[a][b] = 1

    for i in range(n):
        for j in range(m):
            if graph[i][j] == 1 and not visited[i][j]: # bfs가 호출된 횟수 : 배추흰지렁이 개수
                cnt += 1
                bfs(i, j)
    res.append(cnt)

for x in res:
    print(x)
