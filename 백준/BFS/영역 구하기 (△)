import sys
input = sys.stdin.readline

from collections import deque

n, m, k = map(int, input().split())
paper = [ [0] * m for _ in range(n)]
visited = [ [False] * m for _ in range(n) ]
ans = []

for _ in range(k):
    x1, y1, x2, y2 = map(int, input().split())

    for i in range(n-y2, n-y1): # 문제에서 일반적인 좌표와 다르게 설정했으므로 다음 반복문을 통해 뒤집어 준다 (이해하기 힘듦 - 직접 수식계산하면 나옴)
        for j in range(x1, x2):
            paper[i][j] = 1 # 직사각형을 색칠해줌.

dx, dy = [0, 0, -1, 1], [-1, 1, 0, 0]

def bfs(x, y):
    visited[x][y] = True
    cnt = 1
    q = deque([(x, y)])

    while q:
        px, py = q.popleft()

        for k in range(4):
            mx = px + dx[k]
            my = py + dy[k]
            if 0 <= mx < n and 0 <= my < m:
                if paper[mx][my] == 0 and not visited[mx][my]:
                    cnt += 1
                    visited[mx][my] = True
                    q.append((mx, my))

    return cnt


for i in range(n):
    for j in range(m):
        if paper[i][j] == 0 and not visited[i][j]:
            res = bfs(i, j)
            ans.append(res)

print(len(ans))
print(*sorted(ans))
