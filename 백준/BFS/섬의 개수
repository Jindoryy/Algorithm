"""
아이디어
- 대각선까지 포함된 문제이므로 dx, dy의 8방향에 대한 것을 설정한 후 bfs가 호출된 횟수를 세면 섬의 개수가 나올 것 같다.
- 0 0 이 입력되면 테스트 케이스가 종료 되므로 for문이 아닌 while문으로 돌리는 것이 나을 것 같다.
"""

from collections import deque
import sys
input = sys.stdin.readline

dx = [-1, -1, -1, 0, 1, 1, 1, 0]
dy = [1, 0, -1, -1, -1, 0, 1, 1]
res = []

def bfs(x, y):
    visited[x][y] = True
    q = deque([(x, y)])
    while q:
        px, py = q.popleft()
        for k in range(8):
            mx = px + dx[k]
            my = py + dy[k]
            if 0 <= mx < m and 0 <= my < n:
                if graph[mx][my] == 1 and not visited[mx][my]:
                    visited[mx][my] = True
                    q.append((mx, my))

while True:
    n, m = map(int, input().split())

    if n == 0 and m == 0:
        break

    graph = [list(map(int, input().split())) for _ in range(m)]
    visited = [[False] * n for _ in range(m)]
    cnt = 0

    for i in range(m):
        for j in range(n):
            if graph[i][j] == 1 and not visited[i][j]:
                bfs(i, j)
                cnt += 1

    res.append(cnt)

for x in res:
    print(x)
