import sys
input = sys.stdin.readline
from collections import deque

T = int(input())

dx = [-2, -2, -1, -1, 1, 1, 2, 2]
dy = [-1, 1, -2, 2, -2, 2, -1, 1]

for _ in range(T):
    n = int(input())
    pan = [ [0] * n for _ in range(n)]

    x, y = map(int, input().split())

    arrive_x, arrive_y = map(int, input().split())

    q = deque([(x, y)])

    while q:
        px, py = q.popleft()

        if px == arrive_x and py == arrive_y: # 현재 체스의 위치가 도착위치에 도착하면 break
            break

        for k in range(8):
            mx = px + dx[k]
            my = py + dy[k]
            if 0 <= mx < n and 0 <= my < n:
                if pan[mx][my] == 0:
                    pan[mx][my] = pan[px][py] + 1 # 이동한 횟수를 계속 갱신해나감
                    q.append((mx, my))

    print(pan[arrive_x][arrive_y])
