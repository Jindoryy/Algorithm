"""
1. 아이디어
문제 딱 보고 처음 든 생각이 dp문제이구나 싶었다. 
그리고 dp문제중에 예전에 풀었던 백준의 RGB거리랑 똑같다고 느꼈다. 
근데 dp문제 안 푼지가 조금 오래되서 이전에 풀었던 RGB거리 문제의 소스코드를 참조했다.

2. 시간복잡도
언뜻 보기에는 O(N^2)인거 같은데 코드 안에서 n이 행의개수(10000이하의 자연수)이고, 
반복문 내에 max()연산을 하는거는 열의 개수 즉, 4개 이니깐 4*10000 즉 40000인거 같다. 
그래서 상수 무시하고 O(N)이 맞지 않나 싶은데 계속 생각해봐야 겠다.
"""

def solution(land):
    
    n = len(land)
    
    for i in range(1, n):
        land[i][0] += max(land[i-1][1], land[i-1][2], land[i-1][3])
        land[i][1] += max(land[i-1][0], land[i-1][2], land[i-1][3])
        land[i][2] += max(land[i-1][0], land[i-1][1], land[i-1][3])
        land[i][3] += max(land[i-1][0], land[i-1][1], land[i-1][2])
        
    return max(land[n-1])
