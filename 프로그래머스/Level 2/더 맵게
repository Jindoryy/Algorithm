import heapq

def solution(scoville, K):
    
    cnt = 0 # 섞어야 하는 횟수
    
    """ 데이터가 정렬 되지 않은 상태로 들어올 수 있으므로 정렬해줘야함. 
    (안해줘서 테스트 몇개가 틀렸었음) """
    scoville.sort()
    
    heapq.heapify(scoville) # 리스트를 힙으로 변환 : O(n)
    
    while True:
        
        # 리스트의 최소값이 원하는 스코빌 지수보다 낮고 원소가 2개이상 있을 때
        if scoville[0] < K and len(scoville) > 1:
            x = heapq.heappop(scoville)
            y = heapq.heappop(scoville)

            res = x + y * 2

            heapq.heappush(scoville, res)
            
            cnt += 1
        
        # 리스트의 최소값이 원하는 스코빌 지수보다 높거나 원소가 2개 미만일때 break됨
        else:
            break
    
    # return -1이 되는 경우는 최종 원소중에 최소값이 원하는 스코빌 지수보다 낮은 경우임.
    if scoville[0] < K:
        return -1
    else:
        return cnt
