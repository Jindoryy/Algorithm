from collections import deque

dx, dy = [0, 0, -1, 1], [-1, 1, 0, 0]

def solution(maps):
    
    n = len(maps)
    m = len(maps[0])
    
    q = deque([(0, 0)])
    
    while q:
        px, py = q.popleft()
        
        for k in range(4):
            mx = px + dx[k]
            my = py + dy[k]

            if 0 <= mx < n and 0 <= my < m:
                if maps[mx][my] == 1:
                    maps[mx][my] = maps[px][py] + 1
                    q.append((mx, my))
    
    print(maps)
    if maps[n-1][m-1] == 1:
        return -1
    else:
        return maps[n-1][m-1]
